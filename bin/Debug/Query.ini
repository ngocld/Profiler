/*LIST QUERY IS RUNNING*/					SELECT sp.session_Id as [Spid], er.request_id, er.command, DB_NAME(er.database_id) as [Database], login_name as [User], er.blocking_session_id, er.status as [Status], wait_type AS [Wait], CAST('<?query –'+CHAR(13)+SUBSTRING(qt.text, (er.statement_start_offset / 2)+1,     ((CASE er.statement_end_offset WHEN -1 THEN DATALENGTH(qt.text)    ELSE er.statement_end_offset END - er.statement_start_offset)/2) + 1)+CHAR(13)+'–?>' AS xml) as sql_statement, qt.text as [Parent Query], p.query_plan, er.cpu_time, er.reads, er.writes, er.Logical_reads, er.row_count, program_name as Program, Host_name, start_time, DATEDIFF(SECOND, start_time, GETDATE()) AS duration ,'Kill ' + CONVERT(VARCHAR, sp.session_Id) AS KillProcess FROM	sys.dm_exec_requests er INNER JOIN sys.dm_exec_sessions sp ON er.session_id = sp.session_id OUTER APPLY sys.dm_exec_sql_text(er.sql_handle)as qt OUTER APPLY sys.dm_exec_query_plan(er.plan_handle) p WHERE	sp.is_user_process = 1 AND sp.session_Id NOT IN (@@SPID) ORDER BY 1, 2
/*LIST PROFILER IN SERVER*/					SELECT a.id, case a.status when '1' then 'Running' when '0' then 'Stop' end as status, a.max_size, a.max_files, convert(varchar, a.start_time, 120) as start, convert(varchar, a.last_event_time, 120) as last, a.event_count as [count],a.path as [path_server] FROM sys.traces a
/*BACKUP HISTORY*/							SELECT s.Database_name as [DatabaseName], m.Physical_device_name as [BackupFile], CAST(s.backup_size / 1000000 AS INT) AS [Size (MB)], DATEDIFF(second, s.backup_start_date, s.backup_finish_date) as [Taken (s)], s.backup_start_date as [StartTime], CAST(s.first_lsn AS VARCHAR(50)) AS FirstLSN, CAST(s.last_lsn AS VARCHAR(50)) AS LastLSN, CASE s.[type] WHEN 'D' THEN 'Full' WHEN 'I' THEN 'Differential' WHEN 'L' THEN 'Transaction Log' END AS BackupType, s.server_name as [ServerName], s.recovery_model as [RecoveryModel] FROM msdb.dbo.backupset s INNER JOIN msdb.dbo.backupmediafamily m ON s.media_set_id = m.media_set_id ORDER BY backup_start_date DESC, backup_finish_date
/*RESTORE HISTORY*/							SELECT rsh.destination_database_name AS [DatabaseName], rsh.user_name AS [RestoredBy], CASE WHEN rsh.restore_type = 'D' THEN 'Database' WHEN rsh.restore_type = 'F' THEN 'File' WHEN rsh.restore_type = 'G' THEN 'Filegroup' WHEN rsh.restore_type = 'I' THEN 'Differential' WHEN rsh.restore_type = 'L' THEN 'Log' WHEN rsh.restore_type = 'V' THEN 'Verifyonly' WHEN rsh.restore_type = 'R' THEN 'Revert' ELSE rsh.restore_type END AS [Restore Type], rsh.restore_date AS [RestoreStartTime], bmf.physical_device_name AS [RestoredFrom], rf.destination_phys_name AS [RestoredTo] FROM msdb.dbo.restorehistory rsh INNER JOIN msdb.dbo.backupset bs ON rsh.backup_set_id = bs.backup_set_id INNER JOIN msdb.dbo.restorefile rf ON rsh.restore_history_id = rf.restore_history_id INNER JOIN msdb.dbo.backupmediafamily bmf ON bmf.media_set_id = bs.media_set_id WHERE 1=1 ORDER BY rsh.restore_history_id DESC
/*01. TOP 100 LAST QUERY*/					SELECT TOP 100 a.TextData, a.HostName, a.ApplicationName, a.LoginName, a.ServerName, a.EventClass, a.Error, a.DatabaseName, a.RowCounts, a.Duration / 1000 as [Duration (ms)], a.StartTime, a.EndTime, a.Reads, a.Writes, a.CPU FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) ORDER BY a.StartTime DESC
/*02. TOP 100 QUERY WORST PERFORMANCE*/		SELECT TOP 100 a.TextData, a.HostName, a.ApplicationName, a.LoginName, a.ServerName, a.EventClass, a.Error, a.DatabaseName, a.RowCounts, a.Duration / 1000000 as [Duration (s)], a.StartTime, a.EndTime, a.Reads, a.Writes, a.CPU FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) ORDER BY a.Duration DESC
/*03. TOP 100 PROCEDURE*/					SELECT top 100 [Procedure], COUNT(*) AS RequestHit, SUM(duration) / 1000000  AS [Duration (s)], SUM(CPU) AS CPU, SUM(Reads) AS Reads, SUM(Writes) AS Writes, SUM(Error) as ErrorHits from (SELECT  CHARINDEX(' ', convert(nvarchar(200), a.TextData) + ' ', 6) as Pos, left(convert(nvarchar(200), a.TextData), CHARINDEX(' ', convert(nvarchar(200), a.TextData) + ' ', 6)) as [Procedure], a.Duration, a.CPU, a.Reads, a.Writes, a.Error FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12)) aa where Pos > 9 group by [Procedure] order by [Duration (s)] desc
/*04. TOP 100 ROWCOUNT*/					SELECT TOP 100 a.TextData, a.HostName, a.ApplicationName, a.LoginName, a.ServerName, a.EventClass, a.Error, a.DatabaseName, a.RowCounts, a.Duration / 1000 as [Duration (ms)], a.StartTime, a.EndTime, a.Reads, a.Writes, a.CPU FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) order by a.RowCounts desc
/*05. TOP 100 ERROR QUERY*/					SELECT TOP 100 a.TextData, a.HostName, a.ApplicationName, a.LoginName, a.ServerName, a.EventClass, a.DatabaseName, a.RowCounts, a.Duration / 1000 as [Duration (ms)], a.StartTime, a.EndTime, a.Reads, a.Writes, a.CPU FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) and a.Error = '1' order by a.StartTime desc
/*06. FREQUENCY REQUEST PER DAY*/ 			SELECT a.StartTime AS [Day], COUNT(*) AS RequestHit, SUM(duration) / 1000000  AS [Duration (s)], SUM(CPU) AS CPU, SUM(Reads) AS Reads, SUM(Writes) AS Writes, SUM(Error) as ErrorHits FROM (SELECT CONVERT(DATE, StartTime) AS StartTime, CPU, Duration, Reads, Writes, Error FROM sys.fn_trace_gettable('@PathFile', @NumberFile) WHERE EventClass in (10, 12)) a WHERE StartTime is not null GROUP BY StartTime ORDER BY StartTime
/*07. FREQUENCY REQUEST PER HOUR*/			SELECT a.StartTime AS [HoursTime], COUNT(*) AS RequestHit, SUM(duration) / 1000000 AS [Duration (s)], SUM(CPU) AS CPU, SUM(Reads) AS Reads, SUM(Writes) AS Writes, SUM(Error) as ErrorHits FROM (SELECT DATEADD(Hour, DATEDIFF(Hour, 0, StartTime), 0) AS StartTime, cpu, Duration, Reads, Writes, Error FROM sys.fn_trace_gettable('@PathFile', @NumberFile) WHERE EventClass in (10, 12)) a WHERE StartTime is not null GROUP BY StartTime ORDER BY StartTime
/*08. FREQUENCY REQUEST PER DATABASE*/		SELECT a.DatabaseName, COUNT(*) AS RequestHit, SUM(duration) / 1000000  AS [Duration (s)], SUM(CPU) AS CPU, SUM(Reads) AS Reads, SUM(Writes) AS Writes, SUM(Error) as ErrorHits FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) and a.DatabaseName is not null GROUP BY a.DatabaseName order by Reads desc
/*09. FREQUENCY REQUEST PER HOSTNAME*/		SELECT a.HostName, COUNT(*) AS RequestHit, SUM(duration) / 1000000  AS [Duration (s)], SUM(CPU) AS CPU, SUM(Reads) AS Reads, SUM(Writes) AS Writes, SUM(Error) as ErrorHits FROM sys.fn_trace_gettable('@PathFile', @NumberFile) a WHERE a.EventClass in (10, 12) and a.HostName is not null group by a.HostName